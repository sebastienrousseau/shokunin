# Cargo.toml - Configuration file for the SSG CLI (Shokunin Static Site Generator Command-Line Interface)
# Copyright Â© 2024 Shokunin Static Site Generator. All rights reserved.
# SPDX-License-Identifier: Apache-2.0 OR MIT

[package]
# Metadata about the package.
authors.workspace = true # Authors are defined in the workspace.
build = "build.rs" # The build script is defined in the workspace.
edition.workspace = true # The edition is defined in the workspace.
exclude.workspace = true # Files to exclude are defined in the workspace.
homepage.workspace = true # The homepage URL is defined in the workspace.
license.workspace = true # The license is defined in the workspace.
repository.workspace = true # The repository URL is defined in the workspace.
rust-version.workspace = true # The Rust version is defined in the workspace.
# version.workspace = true # The version is defined in the workspace.

# The name of the crate, used by Cargo to identify the project.
name = "ssg-cli"

version =  "0.0.1"

# A short description of the project. This is displayed on package registries like crates.io.
description = "Command Line Interface for the SSG Static Site Generator"

# The path to the README file for the project. Cargo will include this file in the package.
readme = "README.md"

[dependencies]
# Dependencies required for building and running the project.

# The core SSG library, which this CLI wraps and interacts with.
# It is assumed that the `ssg` crate is located one directory level above the `ssg-cli` crate.
# The version ensures compatibility between the CLI and the core SSG project.
ssg-core = { path = "../ssg-core", version = "0.0.1" }

# clap is used for parsing command-line arguments.
# The `derive` feature allows using custom derive macros to reduce boilerplate code when defining CLI structures.
clap = { version = "4.5", features = ["derive"] }

# anyhow provides simple error handling, allowing the use of `Result<T, anyhow::Error>` for better error propagation.
anyhow = "1.0"

# log provides a logging facade, allowing the CLI to log messages at various severity levels (e.g., info, debug, error).
log = "0.4"

# env_logger is used to initialize the logging system and manage log output based on environment variables.
env_logger = "0.11"

# tempfile is used to create temporary files and directories, which can be useful for storing intermediate data.
tempfile = "3.12"

[build-dependencies]
# Dependencies for build scripts.
version_check = "0.9" # Check the Rust version used to compile the package.

# The library file that contains the main logic for the binary.
[lib]
name = "ssg_cli"
path = "src/lib.rs"

# The main file that contains the entry point for the binary.
[[bin]]
name = "ssg_cli"
path = "src/main.rs"
